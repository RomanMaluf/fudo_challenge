# This file is auto-generated by rspec-openapi https://github.com/k0kubun/rspec-openapi
#
# When you write a spec in spec/requests, running the spec with `OPENAPI=1 rspec` will
# update this file automatically. You can also manually edit this file.
---
openapi: 3.0.3
info:
  title: Fudo Challenge OpenAPI Documentation
  version: 1.0.0
  description: Fudo Challenge API
servers:
- url: http://localhost:9292
paths:
  "/AUTHORS":
    get:
      summary: GET /AUTHORS
      responses:
        '200':
          description: returns Authors name
          content:
            application/json:
              schema:
                type: string
              example: Roman Elias Maluf
            text/plain:
              schema:
                type: string
              example: 'Roman Elias Maluf

                '
  "/jobs/all":
    get:
      summary: GET /jobs/all
      responses:
        '200':
          description: returns a list of all jobs
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobs:
                    type: object
                    properties:
                      job1:
                        type: string
                      job2:
                        type: string
                      job3:
                        type: string
                    required:
                    - job1
                    - job2
                    - job3
                required:
                - jobs
              example:
                jobs:
                  job1: queued
                  job2: failed
                  job3: completed
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
        example: 8b8fe474aa171b457c89f501fde6ea27:1748796252
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
        example: application/json
  "/jobs/d7082a53-bcf1-4dac-b92b-f304cdeb3af3":
    get:
      summary: GET /jobs/d7082a53-bcf1-4dac-b92b-f304cdeb3af3
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
        example: 8b8fe474aa171b457c89f501fde6ea27:1748796252
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '200':
          description: returns a specific job for show action
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                  status:
                    type: string
                required:
                - job_id
                - status
              example:
                job_id: d7082a53-bcf1-4dac-b92b-f304cdeb3af3
                status: queued
  "/login":
    post:
      summary: POST /login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
            example:
              username: admin
              password: password
      responses:
        '200':
          description: returns token when correct credentials are provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                required:
                - message
                - token
              example:
                message: Login successful
                token: 8b8fe474aa171b457c89f501fde6ea27:1748796252
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
        example: application/json
  "/products":
    get:
      summary: GET /products
      responses:
        '200':
          description: after 5 seconds new product should be available
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        price:
                          type: number
                          format: float
                        category:
                          type: string
                      required:
                      - id
                      - name
                required:
                - products
              example:
                products:
                - id: 1
                  name: Sample Product
                - id: 2
                  name: New Product
                - id: e2248606
                  name: Test Job
                - id: c673f4f5
                  name: Delayed Product
                  price: 29.99
        '401':
          description: returns unauthorized when missing credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Token is required
        '500':
          description: returns 500 when an internal error occurs
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Internal Server Error
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
        example: 8b8fe474aa171b457c89f501fde6ea27:1748796252
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
        example: application/json
components:
  securitySchemes:
    Authorization:
      description: Authenticate API requests via a Token
      type: apiKey
      in: header
      name: HTTP-AUTHORIZATION
